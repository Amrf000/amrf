![您应该在2019年了解的9个Web组件UI库](https://blog.bitsrc.io/9-web-component-ui-libraries-you-should-know-in-2019-9d4476c3f103)
您应该在2019年了解的9个Web组件UI库
======================

寻找与框架无关的Web组件？看一看
-----------------

[![乔纳森萨林](https://miro.medium.com/fit/c/48/48/1*pLN3R5sML3dcjAvUZDWtOA.png)](/@JonathanSaring?source=post_page-----9d4476c3f103----------------------)

[乔纳森萨林](/@JonathanSaring?source=post_page-----9d4476c3f103----------------------)

跟随

[4月18日](/9-web-component-ui-libraries-you-should-know-in-2019-9d4476c3f103?source=post_page-----9d4476c3f103----------------------) · 6 分钟阅读

![](https://miro.medium.com/max/30/1*-zkpV1IfOv-1dux6ZqWBCQ.png?q=20)

从图像[codeburst](https://codeburst.io/building-efficient-components-6ee2bdaea542)通过[@webrealizer](http://twitter.com/webrealizer)

当我开始搜索Web组件库来撰写这篇文章时，我最初想到“我在哪里可以找到一个很酷的lit-html lib？”这是因为我还没有充分发挥Web组件的潜力。这是一种框架/图书馆的思维方式。这就像问，我想要一个很酷的html库。根据定义，所有Web组件都可以互操作，以便与其他组件良好协作

基于Web组件标准的自定义组件和小部件可以在现代浏览器中使用，并且可以与任何使用HTML的JavaScript库或框架一起使用。

这也是像[**Bit**](https://bit.dev)这样的工具是一个**功能强大的Web组件组合的原因**。放在一起，您可以轻松地构建和分发组件，以便您的团队可以在任何地方使用和开发它们，从而更快地构建应用程序：

*   从任何仓库打包，版本和发布组件，零开销。
*   单独构建，测试和呈现每个组件。
*   轻松查找和使用组件作为包或源代码。
*   从任何消费项目中协作处理各个组件。

[学到更多](https://bit.dev?utm_medium=content&utm_source=bitsandpieces&utm_content=13&utm_campaign=bullets)

[

![](https://miro.medium.com/freeze/max/30/1*eby7DKoLT-OCpOswu2HEbw.gif?q=20)









](https://bit.dev?utm_medium=content&utm_source=bitsandpieces&utm_content=13&utm_campaign=bullets)

轻松打包，发布和协作处理各个组件

随着围绕Web组件，[Stencil](https://stenciljs.com/)，[Svelte](https://github.com/sveltejs/svelte)，[Lit HTML](https://github.com/Polymer/lit-html)等的所有讨论，我决定看看今天网络上可用的Web组件库，以便在未来开始。随意提出更多建议！

* * *

1.材料组件网
=======

![](https://miro.medium.com/max/30/1*59Dnc8RvvIEkCbDCXWZl9A.png?q=20)

通常，标题“材料”将UI组件库定位在星号计数的顶部并下载计数。Google的Material-components-web库是Material-UI库的Web组件版本。虽然仍在进行中，但这些Web组件可以集成到各种上下文和框架中。绝对跟踪这一个。

[

材料组分/材料的组件的web组件


--------------------

### 

Material Web Components - 作为Web组件实现的Material Design ...

#### 

github.com



](https://github.com/material-components/material-components-web-components?source=post_page-----9d4476c3f103----------------------)

2.聚合物元素
=======

![](https://miro.medium.com/max/30/1*ww7cbqxEpOy2YQhlmXONzw.png?q=20)

Google的[Polymer库](https://github.com/Polymer/polymer)允许您构建封装的，可重用的Web组件，其工作方式与标准HTML元素类似，其体验非常简单，只需导入和使用任何其他HTML元素即可。[Polymer elements](https://github.com/PolymerElements?page=3)是一个GitHub组织，包含100多个可重复使用的Polymer组件作为独立的存储库，您可以浏览和使用现成的存储库。例：

<！ - 导入组件 - >   
<script src =“https://unpkg.com/@polymer/paper-checkbox@next/paper-checkbox.js?module”type =“module”> </ script> <！ - 像任何其他HTML元素一样使用它 - >   
<paper-checkbox> Web Components！</ paper-checkbox>

[

PolymerElements


-------------------

### 

PolymerElements有30个可用的存储库。在GitHub上关注他们的代码。

#### 

github.com



](https://github.com/PolymerElements?page=3&source=post_page-----9d4476c3f103----------------------)

*   想法：维护一个仓库中的所有组件，并使所有组件单独可用于在一个[Bit](https://github.com/teambit/bit)集合中查找和使用？

3\. Vaadin网络组件
==============

![](https://miro.medium.com/max/30/1*NQDWjDLhPLcNqXbuCN7-jg.png?q=20)

我认为这个很有希望。它是一个相当新的库，包含一组近30个不断发展的开源Web组件，用于在现代浏览器中构建移动和桌面Web应用程序的UI。开发很活跃，我肯定会跟踪这个库。看看这个。

[

vaadin / vaadin


-------------------

### 

一组不断发展的开源Web组件，用于在现代浏览器中构建移动和桌面Web应用程序。...

#### 

github.com



](https://github.com/vaadin/vaadin?source=post_page-----9d4476c3f103----------------------)

4.有线元素
======

[

![](https://miro.medium.com/max/30/1*-2-1d7QNyXmJePAfi3l4yQ.png?q=20)









](https://bit.dev/wiredjs/wired-elements)

Bit集合中的有线组件

有线元素是一个7K星的元素集合，显示为手绘。为线框而构建，绘制元素，使得两个渲染不会完全相同 - 就像两个单独的手绘形状一样。有用？也许。真棒？绝对:) [在这里](https://codesandbox.io/s/p77jkn13nq)与他们一起玩，即使使用[React](https://codesandbox.io/embed/xrll5wyl8w)和[Vue](https://codesandbox.io/embed/vj389y9375)。

[

wiredjs /有线元件


-----------------

### 

出现手绘元素的集合。非常适合线框。 - wiredjs / wired-elements

#### 

github.com



](https://github.com/wiredjs/wired-elements?source=post_page-----9d4476c3f103----------------------)

[

有线元素by wiredjs·Bit


----------------------

### 

出现手绘元素的集合。非常适合线框。 - 19个Javascript组件。例子…

#### 

bit.dev



](https://bit.dev/wiredjs/wired-elements?source=post_page-----9d4476c3f103----------------------)

5\. Elix
========

![](https://miro.medium.com/max/30/1*6g2WKfrnGpDAr_XXl0NWrw.png?q=20)

Elix是一个社区驱动的可重用的可定制Web组件集，用于常见的用户界面模式。为确保高质量标准，组件将根据[Web组件](https://github.com/webcomponents/gold-standard/wiki)的[黄金标准清单进行](https://github.com/webcomponents/gold-standard/wiki)测量，该[清单](https://github.com/webcomponents/gold-standard/wiki)使用内置HTML元素作为质量条。我真的很兴奋这个，他们正在寻找贡献者...... :)

[

ELIX / ELIX


---------------

### 

用于常见用户界面模式的高质量，可定制的Web组件 - elix / elix

#### 

github.com



](https://github.com/elix/elix?source=post_page-----9d4476c3f103----------------------)

6.时间要素
======

<local-time datetime =“2014-04-01T16：30：00-08：00”>   
 2014年4月1日下午4:30   
</ local-time> \- <local-time datetime =“2014-04-01T16： 30：00-08：00“>   
 2014年4月1日21:30   
</ local-time>

这个相当古老的1.5K星库基本上是一个提供标准HTML `<time>`元素的自定义子类型的组件。通过将时间戳格式化为本地化字符串或作为在用户浏览器中自动更新的相对文本，您可以创建自定义扩展以在任何地方使用。尼斯。

[

GitHub的/时间元素


----------------

### 

Web组件对标准元素的扩展。 - github / time-elements

#### 

github.com



](https://github.com/github/time-elements?source=post_page-----9d4476c3f103----------------------)

7\. UI5-webcomponents
=====================

![](https://miro.medium.com/max/30/1*vnNazvqL6d-RsNNkrfT-DQ.png?q=20)

![](https://miro.medium.com/max/30/1*uerAOzGyqeV8maSftb61mw.png?q=20)

该库由SAP的[UI5构建](https://openui5.org/)，是一组轻量级，可重用且独立的UI元素。但是，组件不是建立在UI5之上，而是独立元素。您可以跨框架和应用程序使用。组件的设计与[SAP Fiori设计指南](https://experience.sap.com/fiori-design-web/)保持一致，并采用了Fiori 3设计。看看[现场操场和API](http://UI5)。

[

SAP / UI5-webcomponents


---------------------------

### 

UI5 Web组件 - 基于本机API的企业级糖！使用...构建SAP Fiori用户界面

#### 

github.com



](https://github.com/SAP/ui5-webcomponents?source=post_page-----9d4476c3f103----------------------)

8\. Patternfly
==============

_运行演示：_

git clone git@github.com：patternfly / patternfly-elements.git   
cd patternfly-elements   
npm install＃这将需要一段时间由于lerna bootstrap   
npm运行故事书

PatternFly Elements是近20个灵活轻量级Web组件的集合，以及构建它们的工具。PatternFly Elements的大小和boilerplating（这几乎是Web组件标准）是轻量级的，在React，Vue，Angular，vanilla JS中工作，使用任何HTML元素。

[

patternfly / patternfly元素


-----------------------------

### 

PatternFly元素：一组UI Web组件。通过创建...来促进patternfly / patternfly-elements的开发

#### 

github.com



](https://github.com/patternfly/patternfly-elements?source=post_page-----9d4476c3f103----------------------)

9\. Web组件org
============

这不是一个库，而是围绕Polymer元素和朋友构建的Google的Web组件发现门户。我在这里列出它，因为它是从Polymer团队更新新Web组件的有用方法，并提供了一些有用的资源，可以在从Web组件开始时阅读。

[

webcomponents.org


---------------------

### 

来自Ionic的Justin Willis本周加入我们，谈论与Ionic的混合应用程序开发以及他们的一些惊人工作......

#### 

www.webcomponents.org



](https://www.webcomponents.org/?source=post_page-----9d4476c3f103----------------------)

荣誉奖
===

[

HTML元素


----------

### 

HTML自定义元素框架。HTML Elements有18个可用的存储库。在GitHub上关注他们的代码。

#### 

github.com



](https://github.com/HTMLElements?source=post_page-----9d4476c3f103----------------------)

[

GitHub的（网络组件）


-----------------

### 

人们如何构建软件。GitHub有30个存储库。在GitHub上关注他们的代码。

#### 

github.com



](https://github.com/github?source=post_page-----9d4476c3f103----------------------)

[

michaelauderer /模版风格组件


--------------------------

### 

小型库将样式组件的概念引入StencilJS。 - michaelauderer /模板风格的组件

#### 

github.com



](https://github.com/michaelauderer/stencil-styled-components?source=post_page-----9d4476c3f103----------------------)

[

obetomuniz /真棒，webcomponents


--------------------------------

### 

精选Web组件工具，文章和资源的精选列表。 - obetomuniz / awesome-webcomponents

#### 

github.com



](https://github.com/obetomuniz/awesome-webcomponents?source=post_page-----9d4476c3f103----------------------)

[

mateusortiz / webcomponents最正确的路


------------------------------------

### 

这是一个旨在介绍Web组件的指南。每个人都可以在这里贡献！...

#### 

github.com



](https://github.com/mateusortiz/webcomponents-the-right-way?source=post_page-----9d4476c3f103----------------------)

[

nepaul /真棒的Web组件


--------------------

### 

精选Web组件的精选列表。通过创建...来为nepaul / awesome-web-components开发做出贡献

#### 

github.com



](https://github.com/nepaul/awesome-web-components?source=post_page-----9d4476c3f103----------------------)

[

mappmechanic /真棒，stenciljs


------------------------------

### 

使用StencilJS构建的令人敬畏的Web组件列表 - mappmechanic / awesome-stenciljs

#### 

github.com



](https://github.com/mappmechanic/awesome-stenciljs?source=post_page-----9d4476c3f103----------------------)

[

RIAEvangelist /真棒，webcomponents


-----------------------------------

### 

通过在GitHub上创建一个帐户，为RIAEvangelist / awesome-webcomponents开发做出贡献。

#### 

github.com



](https://github.com/RIAEvangelist/awesome-webcomponents?source=post_page-----9d4476c3f103----------------------)

[

webcomponents.org


---------------------

### 

来自Ionic的Justin Willis本周加入我们，谈论与Ionic的混合应用程序开发以及他们的一些惊人工作......

#### 

www.webcomponents.org



](https://www.webcomponents.org/?source=post_page-----9d4476c3f103----------------------)

* * *

学到更多
====

[

11 2019年您应该知道的React UI组件库


-----------------------------

### 

11 React组件库包含用于在2019年构建下一个应用程序UI界面的强大组件。

#### 

blog.bitsrc.io



](/11-react-component-libraries-you-should-know-178eb1dd6aa4?source=post_page-----9d4476c3f103----------------------)

[

您应该在2019年知道的11个Vue UI组件库


----------------------------

### 

11个Vue.js组件库工具和框架，适用于2019年的下一个应用程序。

#### 

blog.bitsrc.io



](/11-vue-js-component-libraries-you-should-know-in-2018-3d35ad0ae37f?source=post_page-----9d4476c3f103----------------------)

[

2019年你应该知道的11个角色组件库


-----------------------

### 

11个流行的Angular组件库，用于在2019年构建Angular应用程序。

#### 

blog.bitsrc.io



](/11-angular-component-libraries-you-should-know-in-2018-e9f9c9d544ff?source=post_page-----9d4476c3f103----------------------)