为什么用Go呢,只需要处理一个post请求的http服务,感觉用java/php/node都麻烦了,用c++写也麻烦,go的话编出来也是个小巧的程序,很迷你;
### 问题一:
```
type Message struct {
   title string `json:"title"`
	content  string  `json:"title"`
}
err = json.Unmarshal([]byte(), &msg)
err != nil {
   http.Error(w, err.Error(), )
}
fmt.Println(msg.title+","+msg.content)
```
json解析没有错误但是后面的打印都是空串
后来看到一个答案:[https://gocn.vip/question/1405](https://gocn.vip/question/1405) 首字母大写
```
type Message struct {
   Title string `json:"title"`
   Content  string  `json:"title"`
}
```
果然,打印出预期了-->额
### 问题二:
```
this.http.post('http://127.0.0.1:9333' ,JSON.stringify(product),{headers}).subscribe(..)
```
带{headers}时会导致Unmarshal失败,头先发了一次,头不是json结构,去掉{headers}后正常